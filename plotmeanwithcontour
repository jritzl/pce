resize_img = reshape(cfaImage,142,142,193);
new_slice = squeeze(resize_img(:,71,:));
new_slice = squeeze(resize_img(:,71,:));
logicalIndices = (new_slice < 2);
new_slice(logicalIndices) = 1;
logicalIndices1 = (new_slice ==2);
new_slice(logicalIndices1) = 2;
logicalIndices2 = (new_slice ==3);
new_slice(logicalIndices2) = 3;
logicalIndices3 = (new_slice ==4);
new_slice(logicalIndices3) = 1;
logicalIndices4 = (new_slice ==5);
new_slice(logicalIndices4) = 1;
logicalIndices5 = (new_slice ==6);
new_slice(logicalIndices5) = 1;
logicalIndices6 = (new_slice ==7);
new_slice(logicalIndices6) = 1;
logicalIndices7 = (new_slice ==8);
new_slice(logicalIndices7) = 1;
logicalIndices8 = (new_slice ==9);
new_slice(logicalIndices8) = 4;
logicalIndices9 = (new_slice >9);
new_slice(logicalIndices9) = 5;

custom_colormap = [
1 1 1;        
1 1 1;
1 1 1;
1 1 1;
1 1 1;    
];



data_reshape1 = reshape(mean_MC,142,142,193);
data_reshape2 = reshape(mean_PCE,142,142,193);
data_reshape3 = reshape(abs(mean_MC-mean_PCE),142,142,193);
data_reshape4 = reshape(std_MC,142,142,193);
data_reshape5 = reshape(std_PCE,142,142,193);
data_reshape6 = reshape(abs(std_MC-std_PCE),142,142,193);


t=tiledlayout(3, 3);
% Plot in the first tile
nexttile;
imagesc(flipud(squeeze(data_reshape1(:,71,:))));
h = colorbar;
ylabel('Mean values')
title(h, 'W/cm^{2}')
title('MEAN MC')
hold on
numberArray = new_slice ; % Your numeric array here
% Define levels for contour lines (adjust as needed)
contourLevels = unique(numberArray);
% Create a green colormap with as many colors as there are contour levels
colors = custom_colormap; % You can choose any green-based colormap
% Create a grid of coordinates for the contour plot
[X, Y] = meshgrid(1:size(numberArray, 2), 1:size(numberArray, 1));
% Plot contour lines with different colors
% This ensures that each contour line is plotted with a different color
for i = 1:length(contourLevels)
contour(X, Y, flipud(numberArray), [contourLevels(i), contourLevels(i)], 'LineWidth', 1, 'Color', colors(i,:));
end
hold off
% Plot in the second tile
nexttile;
imagesc(flipud(squeeze(data_reshape2(:,71,:))));
caxis([0,30]);
h = colorbar;
title(h, 'W/cm^{2}')
title('MEAN PCE')
hold on
numberArray = new_slice;  % Your numeric array here
% Define levels for contour lines (adjust as needed)
contourLevels = unique(numberArray);
% Create a green colormap with as many colors as there are contour levels
colors = custom_colormap; % You can choose any green-based colormap
% Create a grid of coordinates for the contour plot
[X, Y] = meshgrid(1:size(numberArray, 2), 1:size(numberArray, 1));
% Plot contour lines with different colors
% This ensures that each contour line is plotted with a different color
for i = 1:length(contourLevels)
contour(X, Y, flipud(numberArray), [contourLevels(i), contourLevels(i)], 'LineWidth', 1, 'Color', colors(i,:));
end
hold off
% Plot in the third tile
nexttile;
imagesc(flipud(squeeze(data_reshape3(:,71,:))));
caxis([0,1]);
title('Absolute Difference')
h = colorbar;
title(h, 'W/cm^{2}')
% Plot in the fourth tile
hold on
numberArray = new_slice ; % Your numeric array here
% Define levels for contour lines (adjust as needed)
contourLevels = unique(numberArray);
% Create a green colormap with as many colors as there are contour levels
colors = custom_colormap; % You can choose any green-based colormap
% Create a grid of coordinates for the contour plot
[X, Y] = meshgrid(1:size(numberArray, 2), 1:size(numberArray, 1));
% Plot contour lines with different colors
% This ensures that each contour line is plotted with a different color
for i = 1:length(contourLevels)
contour(X, Y, flipud(numberArray), [contourLevels(i), contourLevels(i)], 'LineWidth', 1, 'Color', colors(i,:));
end
hold off
nexttile;
imagesc(flipud(squeeze(data_reshape4(:,71,:))));
title('STD MC')
caxis([0,0.5]);
h = colorbar;
ylabel('Standard Deviations')
title(h, 'W/cm^{2}')
% Plot in the fifth tile
hold on
numberArray = new_slice ; % Your numeric array here
% Define levels for contour lines (adjust as needed)
contourLevels = unique(numberArray);
% Create a green colormap with as many colors as there are contour levels
colors = custom_colormap; % You can choose any green-based colormap
% Create a grid of coordinates for the contour plot
[X, Y] = meshgrid(1:size(numberArray, 2), 1:size(numberArray, 1));
% Plot contour lines with different colors
% This ensures that each contour line is plotted with a different color
for i = 1:length(contourLevels)
contour(X, Y, flipud(numberArray),[contourLevels(i), contourLevels(i)], 'LineWidth', 1, 'Color', colors(i,:));
end
hold off
nexttile;
imagesc(flipud(squeeze(data_reshape5(:,71,:))));
title('STD PCE')
caxis([0,0.5]);
h = colorbar;
title(h, 'W/cm^{2}')
% Plot in the sixth tile
hold on
numberArray = new_slice; % Your numeric array here
% Define levels for contour lines (adjust as needed)
contourLevels = unique(numberArray);
% Create a green colormap with as many colors as there are contour levels
colors = custom_colormap; % You can choose any green-based colormap
% Create a grid of coordinates for the contour plot
[X, Y] = meshgrid(1:size(numberArray, 2), 1:size(numberArray, 1));
% Plot contour lines with different colors
% This ensures that each contour line is plotted with a different color
for i = 1:length(contourLevels)
contour(X, Y, flipud(numberArray), [contourLevels(i), contourLevels(i)], 'LineWidth', 1, 'Color', colors(i,:));
end
hold off
nexttile;
imagesc(flipud(squeeze(data_reshape6(:,71,:))));
title('Absolute Difference')
caxis([0,0.2]);
h = colorbar;
hold on
numberArray = new_slice; % Your numeric array here
% Define levels for contour lines (adjust as needed)
contourLevels = unique(numberArray);
% Create a green colormap with as many colors as there are contour levels
colors = custom_colormap; % You can choose any green-based colormap
% Create a grid of coordinates for the contour plot
[X, Y] = meshgrid(1:size(numberArray, 2), 1:size(numberArray, 1));
% Plot contour lines with different colors
% This ensures that each contour line is plotted with a different color
for i = 1:length(contourLevels)
contour(X, Y, flipud(numberArray), [contourLevels(i), contourLevels(i)], 'LineWidth', 1, 'Color', colors(i,:));
end
hold off
t.TileSpacing = 'tight';
t.Padding = 'tight';
