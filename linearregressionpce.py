import multiprocessing
import scipy.io as sio
from sklearn.linear_model import LinearRegression
import chaospy as cp

#create polynomials
polynomials = cp.monomial(
    start=0,
    stop=3,
    dimensions=8,
    cross_truncation=0,
    graded=True,
    reverse=True,
)
#simulation results
mat_contents = sio.loadmat("C:\\Users\\Yunus\\Desktop\\pyy\\model4samples.mat")
evals = mat_contents['data']


#input of simulations
sample0=[1612.8330280918105, 1629.9776926061243, 1625.1211779660478, 1614.3520872752226, 1627.6447502273047, 1617.9693470185023, 1601.7054686271308, 1613.2882648187485, 1628.5316806730264, 1622.3776323772024, 1621.7591896215292, 1620.8864052770043, 1612.4667947074936, 1615.164130154617, 1619.156260572635, 1635.50257900413, 1612.8146795076896, 1632.143748817392, 1614.4876718495357, 1629.44927182524, 1622.3985521605396, 1639.8125598558272, 1612.786076660347, 1627.676404035059, 1622.1649866752966, 1611.5398244803469, 1601.9709245720683, 1625.1948032243708, 1624.3524396134126, 1619.7872814481132, 1615.2120451881942, 1620.541293694461, 1637.330688821966, 1615.628217132403, 1630.3103765899712, 1627.6168450210894, 1627.078429445137, 1639.3430097884689, 1614.2290672935562, 1631.9507889295976, 1623.2721121976429, 1621.1562800168285, 1620.640132215883, 1625.0394362839832, 1616.3560396281189, 1628.0800678299245, 1626.5139293755833, 1633.9233860443956, 1630.7119025991644, 1628.622145572451]
sample1=[1502.0074118483758, 1505.551015975444, 1503.2408480822044, 1504.7155305534818, 1504.2106544741675, 1508.1078239955145, 1505.486326752809, 1505.8523536033729, 1505.3842958308069, 1504.1419362892384, 1506.8691589669718, 1504.3844727595565, 1501.3961226159524, 1506.0078718355571, 1506.6139987398562, 1504.634570287205, 1503.9757499048744, 1505.107940810669, 1504.280780220284, 1503.5089791596315, 1502.2705276780111, 1506.1612728723146, 1505.520541479797, 1503.4530365274602, 1506.151744153884, 1504.6417470635095, 1508.092708059815, 1503.7788911817229, 1503.9617753134298, 1507.1989931090877, 1507.3031901453996, 1503.5711526032326, 1505.2606744958623, 1504.4248683506366, 1505.2715024853292, 1508.9070773143314, 1503.758038445563, 1503.3379104259764, 1504.9809251706645, 1504.726332824, 1503.8103609223513, 1505.5009653655072, 1500.0, 1503.969353402357, 1504.5616668683438, 1504.8077862845919, 1502.6338376174285, 1505.5581482612974, 1504.8586577262847, 1505.6119839079504]
sample2=[1556.9910776315878, 1552.7667570641347, 1561.716274991596, 1551.9304296093455, 1547.3757173479478, 1551.9313801498968, 1550.1202606382553, 1553.5477353443127, 1559.3451140166394, 1550.977332204419, 1554.7419616653056, 1550.8200505069788, 1556.7637361537913, 1546.6304126875693, 1553.6413411968242, 1543.3565970875413, 1552.254145201702, 1543.868400734633, 1556.8608926116713, 1549.6909794035616, 1552.4860678671403, 1558.21636440902, 1564.2253683961276, 1563.0234819175341, 1556.0853394584574, 1556.8694041934855, 1556.6437926312874, 1543.88387056571, 1555.2669304066521, 1547.148837138508, 1558.0952876189192, 1550.5637586701037, 1557.4366855917194, 1547.7489912965775, 1559.9895778853256, 1547.3359622544717, 1550.46068303665, 1555.835362164532, 1555.648705092898, 1544.9762674411807, 1555.0578908643126, 1543.250010201483, 1558.812737303279, 1545.8355637007958, 1548.8196960733783, 1548.2462254912498, 1548.839991006452, 1559.4170764494131, 1558.4890542467235, 1554.3622842205941]
sample3=[1550.8997755456512, 1551.319763952838, 1548.3693472102325, 1553.4297863135612, 1556.0225614755375, 1541.64468380043, 1551.9483098993464, 1560.161024960699, 1546.2154906572227, 1561.2060621406813, 1554.7397300472594, 1548.4970597517358, 1546.6815232825534, 1540.0860689748195, 1555.8979465962839, 1562.016014083282, 1552.4627118649746, 1548.6216420032772, 1552.810105096657, 1549.7561430210712, 1555.112171887342, 1548.8055413309382, 1555.7265724187027, 1558.5765505043641, 1561.3872468481236, 1548.5631909102005, 1560.7052788623855, 1550.8182859298263, 1556.6528649488757, 1552.0144073397084, 1552.7116349672958, 1561.0876673284702, 1549.1506949752015, 1548.0471261328378, 1559.0527844746846, 1562.129361745911, 1562.9060436640261, 1553.557151961765, 1547.1488351422934, 1551.7694408903033, 1550.4131537315643, 1552.313697641667, 1547.7129540320384, 1559.1022182575214, 1553.5235923925834, 1551.3215046904656, 1554.321348053041, 1542.7362971882865, 1542.0200055241337, 1553.9825169283358]
sample4=[1559.9960559812869, 1557.5671437403962, 1552.202242089672, 1551.008918261776, 1555.3800521926642, 1554.125655371929, 1554.8847908419846, 1556.9037377801717, 1554.5206354360432, 1556.423186718342, 1554.9170133509344, 1556.5475355765298, 1560.395157871202, 1558.440046059631, 1551.7756660255181, 1560.4687781565397, 1552.2991662239003, 1564.9105686717764, 1553.7026911967841, 1561.9855730163817, 1554.3662126346485, 1547.6532709672829, 1543.8660933239719, 1546.6476955997002, 1551.720915985049, 1555.9927018987494, 1548.5207789103852, 1559.3382284964327, 1555.3475046745239, 1550.136176802614, 1552.1651685146828, 1545.8815247121213, 1558.817644275081, 1544.090404774616, 1561.333642056402, 1548.2425266792877, 1549.3008294847525, 1550.7711366678896, 1543.711762278404, 1553.2368156993616, 1563.6785155186406, 1556.984897215, 1552.96277163047, 1556.457842040489, 1557.6485791701068, 1549.8713530965388, 1557.111035135466, 1543.8411294752552, 1547.8198397112692, 1555.9404436001819]
sample5=[2805.5757808405233, 2794.4668487794816, 2846.3934967692226, 2846.759996069568, 2817.6316824895453, 2816.6428073915627, 2781.0746228778385, 2801.0238150517707, 2826.911870690884, 2800.2229004818637, 2814.0461290669546, 2821.225108587502, 2791.7165803279345, 2834.5284955228767, 2812.069341473893, 2831.6211421840867, 2794.3802073909565, 2788.446721526757, 2781.356963259349, 2839.9856252026325, 2821.7682593170057, 2798.243544222995, 2765.132562379431, 2814.9125056025664, 2824.8230193339473, 2808.8488421952843, 2795.844139412034, 2832.675623872538, 2806.4051297411575, 2790.3093061858945, 2806.518777699892, 2816.108202856049, 2773.1917382591078, 2788.7590439824544, 2800.5489938642763, 2836.691378520692, 2814.4877546019616, 2837.8798028350247, 2824.640211189858, 2807.3690958519137, 2820.827079662553, 2820.594212248202, 2813.742461926875, 2796.6476151104885, 2833.38780616176, 2842.8995446682384, 2803.6733053859552, 2815.8583512531195, 2784.673802457359, 2853.0814419736134]
sample6=[1505.865122075509, 1507.4747451842065, 1504.9148941870185, 1503.150719926014, 1505.7888811811251, 1501.6013559039854, 1503.9543060973688, 1505.0262115442329, 1500.8875846715307, 1501.9534643507368, 1501.0304430352573, 1504.7065343857378, 1505.3696824992142, 1502.7690329978727, 1502.505082169175, 1502.3142395506368, 1502.3017291786964, 1505.6056588156766, 1505.2354791572463, 1502.404388699161, 1504.9331525496943, 1502.993212206108, 1506.8303737995077, 1508.8276442246677, 1502.2195289380795, 1508.2384611953244, 1504.3676767951226, 1503.1373317546902, 1504.0398745182883, 1504.8578127045735, 1505.0324436159895, 1505.764919997925, 1505.0288168214358, 1507.5651134797783, 1504.6372953722157, 1501.0838001196887, 1504.4839502023538, 1503.412741242099, 1503.5481408447645, 1505.6641191779966, 1507.4061275528375, 1502.1395791695886, 1503.691474434995, 1504.1137127141972, 1501.9786412734506, 1503.8628957127737, 1504.1107666503128, 1503.0609816709323, 1507.456110060331, 1509.4637308790366]
sample7=[1548.3855736797475, 1558.6278152956836, 1544.0748030359325, 1551.8623245066924, 1554.424214966028, 1543.9047514824508, 1557.1568056154977, 1553.4120069883534, 1553.648114237245, 1548.8354390148502, 1553.642926274856, 1544.6099277579356, 1548.776157147652, 1548.3367465946526, 1554.0937097793712, 1549.1872990949696, 1551.7099917511548, 1549.8253688441712, 1545.9842413355466, 1543.7488528977817, 1555.3888752261091, 1539.9059317374627, 1554.7071127968504, 1546.1569416069065, 1555.5075222084683, 1548.5249126192653, 1558.5207265437857, 1549.0616676185396, 1554.0930997525388, 1554.164976481417, 1544.2472030204078, 1543.8707234708397, 1550.1059155342973, 1553.571117855104, 1546.2778007660597, 1550.6324292120826, 1557.1257989736305, 1550.7123297882722, 1560.253374531688, 1549.5701965405856, 1554.0975335418975, 1550.2077548710236, 1547.1441850043004, 1552.4308231080222, 1560.3887626342616, 1551.0151729331196, 1544.8675898469987, 1559.0379046262287, 1551.6756687404647, 1552.170246791119]

numberofsampleused =20
#combine input of simulations
abscissas = [sample0[:numberofsampleused], sample1[:numberofsampleused], sample2[:numberofsampleused], sample3[:numberofsampleused], sample4[:numberofsampleused], sample5[:numberofsampleused], sample6[:numberofsampleused],
             sample7[:numberofsampleused]]


def process_iteration(i):
    #seperate simulaton results for each voxel
    evalx = evals[:numberofsampleused, (i)].flatten().tolist()
    model = LinearRegression(fit_intercept=False)
    function = cp.fit_regression(polynomials, abscissas, evalx, model=model, retall=1)
    print(i) # to see when process will end
    return function[1] #return coeff of respected voxel


def main():
    # Set the start method to 'spawn'
    multiprocessing.set_start_method('spawn')

if __name__ == "__main__":
    main()

    num_processes = 20  # Set the number of processes based on your available CPUs
    indices = range(3891652)
    # Create a multiprocessing pool with the specified number of processes
    with multiprocessing.Pool(processes=num_processes) as pool:
        # Use the 'map' method to apply the 'process_iteration' function to each index
        coeffs = pool.map(process_iteration, indices)
        mat_dict = {'data': coeffs}

        # specify the path where you want to save the file
        path = 'C:/Users/Yunus/Desktop/pyy/'

        # save the dictionary to a .mat file in the specified path

        sio.savemat(path + 'model4funcwith' + str(numberofsampleused) + '.mat', mat_dict)
        print("Data saved.")


